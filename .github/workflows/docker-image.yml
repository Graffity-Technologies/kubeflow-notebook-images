name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./python:3.9.16.Dockerfile
            image: graffitytech/kf-notebook-python:3.9.16

          - dockerfile: ./python:3.10.10.Dockerfile
            image: graffitytech/kf-notebook-python:3.10.10

          - dockerfile: ./python:3.11.2.Dockerfile
            image: graffitytech/kf-notebook-python:3.11.2

          - dockerfile: ./pytorch:1.9.0-cuda10.2-cudnn7-runtime.Dockerfile
            image: graffitytech/kf-notebook-pytorch:1.9.0-cuda10.2-cudnn7-runtime

          - dockerfile: ./pytorch:1.9.1-cuda11.1-cudnn8-runtime.Dockerfile
            image: graffitytech/kf-notebook-pytorch:1.9.1-cuda11.1-cudnn8-runtime

          - dockerfile: ./pytorch:1.12.1-cuda11.3-cudnn8-runtime.Dockerfile
            image: graffitytech/kf-notebook-pytorch:1.12.1-cuda11.3-cudnn8-runtime

          - dockerfile: ./pytorch:2.0.0-cuda11.7-cudnn8-runtime.Dockerfile
            image: graffitytech/kf-notebook-pytorch:2.0.0-cuda11.7-cudnn8-runtime

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ matrix.image }}

      - name: Build and push Dockerimages
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # build:

  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v3
  #     with:
  #       fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.
    
    # - name: Login to Docker Hub
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}
          
    # https://github.com/marketplace/actions/changed-files
    # - name: Get changed Dockerfile(s)
    #   id: changed-files
    #   uses: tj-actions/changed-files@V35
    #   with:
    #     files: |
    #         **/*.Dockerfile

    # - name: List all changed files
    #   run: |
    #     for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
    #       echo "$file was changed"
    #     done
      
    # - name: Finding Dockerfiles and store to output
    #   id: finding-files
    #   run: |
    #     echo "::set-output name=FILELIST::$(find . -name '*.Dockerfile' -print)"

    # - name: Build Dockerfiles from output
    #   run: |
    #     IFS="," read -a myarray <<< ${{ steps.finding-files.outputs.FILELIST }}
    #     for i in "${myarray[@]}"; do
    #       export file_path=$(dirname "${i}")
    #       export file_name=$(basename "${i}")
    #       docker build -t graffitytech/kf-notebook-${file_name%.*}  -f $file_name .
    #     done
        
    # - name: Push Dockerfiles from output
    #   run: |
    #     IFS="," read -a myarray <<< ${{ steps.finding-files.outputs.FILELIST }}
    #     for i in "${myarray[@]}"; do
    #       export file_name=$(basename "${i}")
    #       docker push graffitytech/kf-notebook-${file_name%.*}
    #     done
      
    # Pytorch Start --------------------------------------------------------------
    
#     - name: Build and push
#       env:
#           IMAGE_NAME: "pytorch:2.0.0-cuda11.7-cudnn8-runtime"
#       run: >
#         docker build -t graffitytech/kf-notebook-$IMAGE_NAME -f $IMAGE_NAME.Dockerfile .
#         && docker push graffitytech/kf-notebook-$IMAGE_NAME
        
#     - name: Build and push
#       env:
#           IMAGE_NAME: "pytorch:1.12.1-cuda11.3-cudnn8-runtime"
#       run: >
#         docker build -t graffitytech/kf-notebook-$IMAGE_NAME -f $IMAGE_NAME.Dockerfile .
#         && docker push graffitytech/kf-notebook-$IMAGE_NAME
        
    
        
#     - name: Build and push - $IMAGE_NAME
#       uses: docker/build-push-action@v4
#       env:
#         IMAGE_NAME: "pytorch:1.9.1-cuda11.1-cudnn8-runtime"
#       with:
#         context: .
#         file: ./$IMAGE_NAME.Dockerfile
#         push: true
#         tags: ${{ secrets.DOCKERHUB_USERNAME }}/kf-notebook-$IMAGE_NAME
        
#     - name: Build and push - $IMAGE_NAME
#       uses: docker/build-push-action@v4
#       env:
#         IMAGE_NAME: "pytorch:1.9.0-cuda10.2-cudnn7-runtime"
#       with:
#         context: .
#         file: ./$IMAGE_NAME.Dockerfile
#         push: true
#         tags: ${{ secrets.DOCKERHUB_USERNAME }}/kf-notebook-$IMAGE_NAME
      
    # Pytorch Start --------------------------------------------------------------
    
    # Python Start --------------------------------------------------------------
    
#     - name: Build and push - $IMAGE_NAME
#       uses: docker/build-push-action@v4
#       env:
#         IMAGE_NAME: "python:3.9.16"
#       with:
#         context: .
#         file: ./$IMAGE_NAME.Dockerfile
#         push: true
#         tags: ${{ secrets.DOCKERHUB_USERNAME }}/kf-notebook-$IMAGE_NAME
        
#     - name: Build and push - $IMAGE_NAME
#       uses: docker/build-push-action@v4
#       env:
#         IMAGE_NAME: "python:3.10.10"
#       with:
#         context: .
#         file: ./$IMAGE_NAME.Dockerfile
#         push: true
#         tags: ${{ secrets.DOCKERHUB_USERNAME }}/kf-notebook-$IMAGE_NAME
        
#     - name: Build and push - $IMAGE_NAME
#       uses: docker/build-push-action@v4
#       env:
#         IMAGE_NAME: "python:3.11.2"
#       with:
#         context: .
#         file: ./$IMAGE_NAME.Dockerfile
#         push: true
#         tags: ${{ secrets.DOCKERHUB_USERNAME }}/kf-notebook-$IMAGE_NAME
      
    # Python Start --------------------------------------------------------------
    
    # CUDA Start --------------------------------------------------------------
    
#     - name: Build and push - $IMAGE_NAME
#       uses: docker/build-push-action@v4
#       env:
#         IMAGE_NAME: "cuda:12.1.0-runtime-ubuntu20.04"
#       with:
#         context: .
#         file: ./$IMAGE_NAME.Dockerfile
#         push: true
#         tags: ${{ secrets.DOCKERHUB_USERNAME }}/kf-notebook-$IMAGE_NAME
      
    # CUDA Start --------------------------------------------------------------
        
    
